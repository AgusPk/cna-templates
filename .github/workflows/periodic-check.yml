name: Periodic - Create and Build app using addon/base and extensions

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    - cron: '31 1,12 * * *'

jobs:
  base-es:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using Ecma Script base
        run: yarn create react-webpack-project app --src-dir=src --verbose
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  base-ts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using TypeScript base
        run: yarn create react-webpack-project app --src-dir=src --typescript
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  i18n-es:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using Ecma Script + i18n
        run: yarn create react-webpack-project app --src-dir=src --i18n
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  i18n-ts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using TypeScript + i18n
        run: yarn create react-webpack-project app --src-dir=src --typescript --i18n
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  redux-es:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using Redux
        run: yarn create react-webpack-project app --src-dir=src --redux
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  redux-ts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using TypeScript + Redux
        run: yarn create react-webpack-project app --src-dir=src --typescript --redux
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  redux-saga-es:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using Redux Saga
        run: yarn create react-webpack-project app --src-dir=src --redux --saga
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  redux-saga-ts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using TypeScript + Redux Saga
        run: yarn create react-webpack-project app --src-dir=src --typescript --redux --saga
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  recoil-es:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using Recoil
        run: yarn create react-webpack-project app --src-dir=src --recoil
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
  recoil-ts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: yarn --no-progress --non-interactive --no-lockfile
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Create app using TypeScript + Recoil
        run: yarn create react-webpack-project app --src-dir=src --typescript --recoil
      - name: Lint code after build
        run: |
          cd app
          yarn lint:fix
      - name: Build prod bundle
        run: |
          cd app
          yarn build
      - name: Build dev bundle
        run: |
          cd app
          yarn build:dev
